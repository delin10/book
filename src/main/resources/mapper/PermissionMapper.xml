<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nil.ed.onlineexam.mapper.PermissionMapper">
  <resultMap id="BaseResultMap" type="nil.ed.onlineexam.entity.Permission">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="uri" jdbcType="VARCHAR" property="uri" />
    <result column="del_mark" jdbcType="TINYINT" property="delMark" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="last_update_time" jdbcType="BIGINT" property="lastUpdateTime" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
  </resultMap>
  <insert id="insert" parameterType="nil.ed.onlineexam.entity.Permission">
    insert into t_resource (id, name, uri, 
      del_mark, create_time, last_update_time, 
      creator)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{uri,jdbcType=VARCHAR}, 
      #{delMark,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, #{lastUpdateTime,jdbcType=BIGINT}, 
      #{creator,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="nil.ed.onlineexam.entity.Permission">
    insert into t_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="uri != null">
        uri,
      </if>
      <if test="delMark != null">
        del_mark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="uri != null">
        #{uri,jdbcType=VARCHAR},
      </if>
      <if test="delMark != null">
        #{delMark,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="listAllResources" resultMap="BaseResultMap">
    select * from `t_resource`
  </select>

  <select id="getResourceById" resultMap="BaseResultMap">
    select * from `t_resource` where `t_resource`.id = #{id}
  </select>

  <delete id="deleteResourceById">
    delete from `t_resource` where `t_resource`.id = #{id}
  </delete>

  <update id="updateResource">
    update `t_resource`
    <set>
      <if test="#{permission.name} != null">
        `t_resource`.`name` = #{permission.name},
      </if>
      <if test="#{permission.uri} != null">
        `t_resource`.`uri` = #{permission.uri}
      </if>
    </set>
    <where>
      `t_resource`.`id` = #{permission.id}
    </where>
  </update>

  <select id="listPermissionsOfRole" resultMap="nil.ed.onlineexam.mapper.PermissionMapper.BaseResultMap">
    select `trs`.*
    from `t_role` tr
    left join `t_role_resource` trr on `tr`.`id` = `trr`.`role_id`
    left join `t_resource` trs on `trs`.`id` = `trr`.`resource_id`
    where `tr`.`id` = #{id};
  </select>
</mapper>