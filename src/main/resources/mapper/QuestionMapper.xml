<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nil.ed.onlineexam.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="nil.ed.onlineexam.entity.Question">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="options" jdbcType="VARCHAR" property="options" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="updater" jdbcType="INTEGER" property="updater" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <insert id="insert" parameterType="nil.ed.onlineexam.entity.Question">
    insert into
    `t_question` (`id`,
    `type`,
    `content`,
    `options`,
    `answer`,
    `creator`,
    `updater`,
    `create_time`,
    `update_time`)
    values (
    #{id,jdbcType=INTEGER},
    #{type,jdbcType=TINYINT},
    #{content,jdbcType=VARCHAR},
    #{options,jdbcType=VARCHAR},
    #{answer,jdbcType=VARCHAR},
    #{creator,jdbcType=INTEGER},
    #{updater,jdbcType=INTEGER},
    #{createTime,jdbcType=BIGINT},
    #{updateTime,jdbcType=BIGINT})
  </insert>

  <select id="listQuestions" resultMap="BaseResultMap">
    select * from `t_question`
    <if test="type != null">
      where type = #{type}
    </if>
    limit #{pageStart},#{pageSize};
  </select>

  <select id="countQuestions" resultType="java.lang.Integer">
    select count(*) from `t_question`
    <if test="type != null">
      where type = #{type}
    </if>
  </select>

  <select id="listQuestionsByCreator" resultMap="BaseResultMap">
    select * from `t_question`
    where `t_question`.`creator` = #{creator}
    limit #{pageStart},#{pageSize};
  </select>

  <select id="countQuestionsByCreator" resultType="java.lang.Integer">
    select count(*) from `t_question`
    where `t_question`.`creator` = #{creator};
  </select>

  <select id="getQuestionById" resultMap="BaseResultMap">
    select * from `t_question` where `t_question`.`id` = #{id}
  </select>

  <delete id="deleteQuestionById">
    delete from `t_question` where `t_question`.`id` = #{id}
  </delete>

  <update id="updateQuestion" parameterType="nil.ed.onlineexam.entity.Question">
    update `t_question`
    <set>
      <if test="#{question.content} != null">
        `t_question`.`content` = #{question.content},
      </if>
      <if test="#{question.answer} != null">
        `t_question`.`answer` = #{question.answer},
      </if>
      <if test="#{question.options} != null">
        `t_question`.`options` = #{question.options},
      </if>
      <if test="#{question.type} != null">
        `t_question`.`type` = #{question.type},
      </if>
      `t_question`.`update_time` = #{question.updateTime},
      `t_question`.`updater` = #{question.updater}
    </set>
    <where>
      `t_question`.`id` = #{question.id}
    </where>
  </update>

  <select id="listQuestionsRandomly" resultMap="BaseResultMap">
    select * from `t_question`
    where `t_question`.`type` = #{type}
    order by rand()
    limit #{n};
  </select>
</mapper>